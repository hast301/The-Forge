RELEASE NOTES - DxCompiler Preview Release 1 for DirectX Raytracing (DXR)

This is a build of the DxCompiler that targets building DirectX Raytracing (DXR)
DXIL libraries.

This build also contains prerelease functionality used by the Fallback Layer.


Here are the main differences between D3D12 Raytracing Functional Spec and this
compiler release, as well as some important guidelines to minimize headaches.

1. It is strongly recommended that all compilations use the -Zpr flag for
defaulting matrix orientation to row_major, and that column_major matrix
declarations are avoided.  There are known issues with column_major in libraries
for this release.

2. Subobjects are not yet implemented in HLSL for this release.  They must be
specified through the D3D12 Raytracing API instead.

3. Directly calling functions across library boundaries in a shader is not well-
tested and may not work on some driver implementations.  In other words, each
shader function should have all called functions present in the same library in
order to completely inline the function.

4. Validation is not implemented for this release.  Mistakes, such as writing
shaders that call intrinsic functions that are not allowed in a particular
shader type will succeed compilation on DxCompiler, but will fail in some opaque
way inside the driver.

5. Pay close attention to the release notes for the targeted driver or fallback
layer for this release, since deviations may result in various kinds of opaque
failures at runtime.

6. DXIL.dll is not included with this release.  For validation and signing of
graphics and compute shaders with 6.0 and 6.1 shader model, please use the
DXIL.dll included in the latest Windows SDK.  For libraries, there is no
validation or signing implemented for this release.

